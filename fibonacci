Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

# fibonacci sequence

def fibonacci(N = 4000000):
    if N == 0: return 0
    elif N == 1: return 1
    else: return fibonacci(n-1) + fibonacci(n-2)
    
def getsum(fibonacci):
    sum = 0
    for item in fibonacci:
        if item%2 == 0:
           sum += item
    return sum                # setting up the condition for evenness and returning the sum
        
n = 100

def fib(n:'upto n number')->int:
    l=[0,1]
    if n==0:
        return l[0]
    elif n==1:
        return l
    a=0
    b=1
    for i in range(0,n-1):
        b=a+b
        a=b-a
        l.append(b)
    return l
